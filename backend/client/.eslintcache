[{"C:\\Users\\ThinkpadT440p\\Desktop\\pern-todo\\client\\src\\index.js":"1","C:\\Users\\ThinkpadT440p\\Desktop\\pern-todo\\client\\src\\App.js":"2","C:\\Users\\ThinkpadT440p\\Desktop\\pern-todo\\client\\src\\components\\InputTodo.js":"3","C:\\Users\\ThinkpadT440p\\Desktop\\pern-todo\\client\\src\\components\\ListTodos.js":"4","C:\\Users\\ThinkpadT440p\\Desktop\\pern-todo\\client\\src\\components\\EditTodo.js":"5"},{"size":221,"mtime":1611289908573,"results":"6","hashOfConfig":"7"},{"size":356,"mtime":1611292418179,"results":"8","hashOfConfig":"7"},{"size":1103,"mtime":1611534774650,"results":"9","hashOfConfig":"7"},{"size":1877,"mtime":1611521762828,"results":"10","hashOfConfig":"7"},{"size":2074,"mtime":1611536188256,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"8lgqq1",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ThinkpadT440p\\Desktop\\pern-todo\\client\\src\\index.js",[],["24","25"],"C:\\Users\\ThinkpadT440p\\Desktop\\pern-todo\\client\\src\\App.js",[],"C:\\Users\\ThinkpadT440p\\Desktop\\pern-todo\\client\\src\\components\\InputTodo.js",["26"],"C:\\Users\\ThinkpadT440p\\Desktop\\pern-todo\\client\\src\\components\\ListTodos.js",["27"],"import React,{Fragment, useEffect, useState} from \"react\";\r\nimport EditTodo from \"./EditTodo\";\r\n\r\nconst ListTodos = ()=> {\r\n\r\n    const [todos,setTodos] = useState([]);\r\n\r\n    //delete\r\n\r\n    const deleteTodo = async (id) =>{\r\n        try {\r\n            const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`,{\r\n                method:\"DELETE\"\r\n            });\r\n            setTodos(todos.filter(todo=> todo.todo_id !== id))\r\n        } catch (error) {\r\n            console.error(error.message)\r\n        }\r\n    }\r\n\r\n    const getTodos = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/todos\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos(jsonData);\r\n\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n    };\r\n\r\n    useEffect ( ()=>{\r\n        getTodos();\r\n    },[]);\r\n    console.log(todos);\r\n    return(\r\n        <Fragment> <table class=\"table mt-5 text-center\">\r\n        <thead>\r\n          <tr>\r\n            <th>Descripcion</th>\r\n            <th>Editar</th>\r\n            <th>Eliminar</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          \r\n              {/* <tr>\r\n            <td>Mary</td>\r\n            <td>Moe</td>\r\n            <td>mary@example.com</td>\r\n          </tr>*/}\r\n          {todos.map(todo=>(\r\n              <tr key={todo.todo_id}>\r\n                  <td>\r\n                      {todo.description}\r\n                  </td>\r\n                  <td>\r\n                      <EditTodo todo ={todo} />\r\n                  </td>\r\n                  <td>\r\n                      <button className=\"btn btn-danger\" onClick={()=>deleteTodo(todo.todo_id)}>Eliminar</button>\r\n                  </td>\r\n              </tr>\r\n          ))}\r\n           \r\n        </tbody>\r\n      </table></Fragment>\r\n        \r\n    )\r\n};\r\n\r\nexport default ListTodos;","C:\\Users\\ThinkpadT440p\\Desktop\\pern-todo\\client\\src\\components\\EditTodo.js",["28"],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":11,"column":19,"nodeType":"35","messageId":"36","endLine":11,"endColumn":27},{"ruleId":"33","severity":1,"message":"37","line":12,"column":19,"nodeType":"35","messageId":"36","endLine":12,"endColumn":29},{"ruleId":"33","severity":1,"message":"34","line":10,"column":11,"nodeType":"35","messageId":"36","endLine":10,"endColumn":19},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'deleteTodo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]